name: Verify Pull Request
on:
  workflow_dispatch: # manual trigger
  push:
    branches:
      - master
  pull_request:
    types: [ opened, reopened, ready_for_review, synchronize ]
    branches: [ "development", "master" ]
jobs:
  verify:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.10.0'
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'
      - name: Setup Melos
        run: dart pub global activate melos
      - name: Melos Bootstrap
        run: melos bootstrap
      - name: Install dependencies
        run: melos get
      - name: Analyze
        run: melos analyze
      - name: Flutter build APK
        run: (cd example && flutter build apk)
      - name: Run Ktlint
        run: (cd example/android &&./gradlew ktlintcheck)
      - name: Run tests
        run: melos unittest
      - name: Check Publish Warnings
        run: |
          outputs=$(melos exec --concurrency=1 --no-private --ignore="*example*" -- "flutter pub publish --dry-run" 2>&1)
          critical_issue_detected=false
          while IFS= read -r line; do
            if echo "$line" | grep -q "Building package"; then
              critical_issue_detected=false
            fi
            if echo "$line" | grep -q "Constraints that are too tight"; then
              # Ignore strict versioning warning
              continue
            elif echo "$line" | grep -q -E "error:|warning:"; then
              critical_issue_detected=true
            fi
            echo "$line"
          done <<< "$outputs"
          if [ "$critical_issue_detected" = true ]; then
            echo "Critical issues detected. Failing the build step."
            exit 1
          fi
        shell: bash